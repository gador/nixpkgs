diff --git a/modules/particl-core/particlcore.js b/modules/particl-core/particlcore.js
index 335ffbef9..b1b1f86a3 100644
--- a/modules/particl-core/particlcore.js
+++ b/modules/particl-core/particlcore.js
@@ -320,7 +320,7 @@ module.exports = class ParticlCore extends CoreInstance {
     this.#settingsValues = this.#settingsRef.store;
 
     this.#appVersion = appConfig.VERSIONS.app;
-    this.#binaryPath = _path.join(appConfig.PATHS.binaries, 'particl');
+    this.#binaryPath = '@particl_core@/bin';
     this.#blockMainnet = appConfig.TESTING_MODE === true;
     this.#isDevelopmentEnvironment = appConfig.MODE === 'developer';
   }
@@ -494,17 +494,9 @@ module.exports = class ParticlCore extends CoreInstance {
       const cfg = await this.#processBinaryConfig();
 
       if (this.#cancelSignal.aborted) return;
-      if (!(cfg.hash && cfg.version)) {
-        this.#updateStatus({
-          message: 'Failed to retrieve Particl Core binary details!',
-          hasError: true,
-          started: STARTED_STATUS.STOPPED
-        });
-        return;
-      }
 
       // 2. Search for and start core
-      const isStarted = await this.#startCoreBinary(cfg.version, cfg.hash, cfg.downloadUrl);
+      const isStarted = await this.#startCoreBinary();
 
       if (this.#cancelSignal.aborted) return;
 
@@ -630,21 +622,7 @@ module.exports = class ParticlCore extends CoreInstance {
 
 
   #createBinariesDir() {
-    // Test for existence of the containing binaries dir
-    let pathExists = false;
-    try {
-      _fs.accessSync(this.#binaryPath, _fs.constants.W_OK | _fs.constants.R_OK );
-      pathExists = true;
-    } catch (err) {
-
-      try {
-        if (!_fs.existsSync(this.#binaryPath)) {
-          _fs.mkdirSync(this.#binaryPath, {recursive: true});
-          pathExists = true;
-        }
-      } catch(_) { /* nothing much to do here */}
-    }
-    return pathExists;
+    return true;
   }
 
 
@@ -781,7 +759,7 @@ module.exports = class ParticlCore extends CoreInstance {
   }
 
 
-  async #startCoreBinary(version, hash, downloadUrl) {
+  async #startCoreBinary() {
 
     if (this.#cancelSignal.aborted) return false;
 
@@ -807,18 +785,6 @@ module.exports = class ParticlCore extends CoreInstance {
 
     if (this.#cancelSignal.aborted) return false;
 
-    if (hasBinary) {
-      this.#updateStatus({message: `Verifying found binary file version`});
-      const isvalid = await this.#validateBinary(binPath, version).catch(() => false);
-
-      if (this.#cancelSignal.aborted) return false;
-
-      if (!isvalid) {
-        hasBinary = false;
-        this.#updateStatus({message: `Verification of found binary failed!`});
-      }
-    }
-
     if (!hasBinary) {
 
       // check for previously downloaded archive locally
